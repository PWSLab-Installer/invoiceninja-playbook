---

- name: Create schema for ninja
  shell: mysql -u root -p'root' -e "CREATE SCHEMA ninja DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;"

- name: Create DB User ninja
  shell: mysql -u root -p'root' -e "CREATE USER 'ninja'@'localhost' IDENTIFIED BY 'ninja';"

- name: Grant Privs to User ninja
  shell: mysql -u root -p'root' -e "GRANT ALL PRIVILEGES ON ninja.* TO 'ninja'@'localhost';"
  
- name: Alter Privs to User ninja
  shell: mysql -u root -p'root' -e "ALTER USER ninja@'localhost' IDENTIFIED WITH mysql_native_password BY 'ninja';"
  when:
    - os_check.stdout | regex_search("Ubuntu 20")
  
# - name: Create database user with name 'ninja'
#   mysql_user:
#     name: ninja
#     password: ninja
#     priv: 'ninja.*:ALL'
#     state: present

- name: Download Invoice Ninja
  get_url:
      url: https://download.invoiceninja.com/
      dest: /tmp/invoice-ninja.zip
  when:
      - os_check.stdout | regex_search("Ubuntu") or os_check.stdout | regex_search("CentOS")
  
- name: Install Essential Packages
  apt:
      name: "{{ item }}"
      state: present
  loop:
    - unzip
    - php{{ php_version }}-mysql
  when: 
      - os_check.stdout | regex_search("Ubuntu")

- name: Enable remi repo - CentOS 7
  command: yum-config-manager --enable remi-php72
  when: 
    - os_check.stdout | regex_search("CentOS Linux 7")

- name: Install Essential Packages
  yum:
      name: "{{ item }}"
      state: present
  loop:
    - unzip
    - php-json
    - php-pdo_mysql
  when: 
      - os_check.stdout | regex_search("CentOS")



- name: Extract invoice.ninja into /tmp
  unarchive:
      src: /tmp/invoice-ninja.zip
      dest: /var/www/
  when:
      - os_check.stdout | regex_search("Ubuntu") or os_check.stdout | regex_search("CentOS")

- name: Rename the ninja directory
  command: mv /var/www/ninja /var/www/invoice-ninja
  ignore_errors: yes
  when:
      - os_check.stdout | regex_search("Ubuntu") or os_check.stdout | regex_search("CentOS")

- name: Grant permissions
  file:
      path: /var/www/invoice-ninja/
      state: directory
      recurse: yes
      owner: www-data
      group: www-data
      mode: '0755'
  when:
      - os_check.stdout | regex_search("Ubuntu")

- name: Grant permissions
  file:
      path: /var/www/invoice-ninja/
      state: directory
      recurse: yes
      owner: nginx
      group: nginx
      mode: '0777'
  when:
      - os_check.stdout | regex_search("CentOS")

- name: Sets Nginx conf file - Ubuntu
  become: true
  template:
    src: "nginx.conf.j2"
    dest: "/etc/nginx/sites-available/invoice_ninja"
  when:
        - os_check.stdout | regex_search("Ubuntu")

- name: Sets Nginx conf file - CentOS
  become: true
  template:
    src: "nginx.conf.j2"
    dest: "/etc/nginx/conf.d/invoice_ninja.conf"
  when:
        - os_check.stdout | regex_search("CentOS")

- name: Create the FASTCGI directory
  become: true
  file:
    path: /etc/nginx/snippets/
    state: directory
  when:
        - os_check.stdout | regex_search("CentOS")

- name: Sets FASTCGI conf file - CentOS
  become: true
  template:
    src: "fastcgi-centos.conf.j2"
    dest: "/etc/nginx/snippets/fastcgi-php.conf"
  when:
        - os_check.stdout | regex_search("CentOS")

- name: Sets FASTCGI conf file - CentOS
  become: true
  template:
    src: "fastcgi.conf"
    dest: "/etc/nginx/"
  when:
        - os_check.stdout | regex_search("CentOS")

- name: Remove file (delete file)
  file:
    path: /etc/nginx/conf.d/default.conf
    state: absent
  when:
    - os_check.stdout | regex_search("CentOS")

- name: Enables new site
  become: true
  file:
    src: "/etc/nginx/sites-available/invoice_ninja"
    dest: "/etc/nginx/sites-enabled/invoice_ninja"
    state: link
#   notify: Reload Nginx
  when:
    - os_check.stdout | regex_search("Ubuntu")

- name: Removes "default" site
  become: true
  file:
    path: "/etc/nginx/sites-enabled/default"
    state: absent
#   notify: Reload Nginx
  when:
    - os_check.stdout | regex_search("Ubuntu")

- name: Disable SELinux
  selinux:
    state: disabled
  when:
    - os_check.stdout | regex_search("CentOS")

- name: Restart the services
  service:
    name: "{{ item }}"
    state: restarted
  loop:
    - php-fpm
    - nginx
  when:
    - os_check.stdout | regex_search("CentOS")

- name: Restart the services
  service:
    name: "{{ item }}"
    state: restarted
  loop:
    - php{{ php_version }}-fpm
    - nginx
  when:
    - os_check.stdout | regex_search("Ubuntu")
  